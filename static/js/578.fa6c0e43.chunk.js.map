{"version":3,"file":"static/js/578.fa6c0e43.chunk.js","mappings":"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","sources":["hooks/useHtttp.js","DAL/MarvelAPI/MarvelAPI.js","components/Comics/Comics.js","components/Comics/ComicsItem/ComicsItem.js","components/Common/Error/Error.js","utils/utils.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\nconst useHtttp = () => {\r\n   \r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', headers = { 'Content-Type': 'application/json' }, body = null) => {\r\n        //setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, { method, headers, body });\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.log(error.message)\r\n            throw error;\r\n        }\r\n\r\n    }, []);\r\n    const clearError = useCallback(() =>{\r\n        setProcess('error');\r\n    }, [])\r\n\r\n    return {  request, clearError, process, setProcess };\r\n\r\n}\r\n\r\n\r\nexport default useHtttp;","import useHtttp from \"../../hooks/useHtttp\";\r\n\r\n\r\nconst useMarvelAPI = () => {\r\n    let {  request, clearError, process, setProcess } = useHtttp();\r\n\r\n    const _baseURL = 'https://gateway.marvel.com:443/v1/public/characters';\r\n    const _apiKey = 'apikey=34f1a3219ea2ae0e4d07e8edc8e23bf5';\r\n\r\n    const getAllCharcters = async (offset = 500) => {\r\n        let res = await request(`${_baseURL}?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res;\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        let res = await request(`${_baseURL}/${id}?limit=9&offset=500&${_apiKey}`);\r\n        return _transformData(res);\r\n    }\r\n\r\n    const getAllComics = async (offset = 10000) => {\r\n        let res = await request(`https://gateway.marvel.com:443/v1/public/comics?orderBy=-issueNumber&limit=8&offset=${offset}&apikey=34f1a3219ea2ae0e4d07e8edc8e23bf5`);\r\n        return res;\r\n    }\r\n\r\n    const getComicsItem = async (id) => {\r\n        let res = await request(`https://gateway.marvel.com:443/v1/public/comics/${id}?apikey=34f1a3219ea2ae0e4d07e8edc8e23bf5`);\r\n        return _transformComicsItemObj(res);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        let res = await request(`https://gateway.marvel.com:443/v1/public/characters?name=${name}&apikey=34f1a3219ea2ae0e4d07e8edc8e23bf5`);\r\n        return res.data.results;/////////////\r\n    }\r\n\r\n    const _transformData = (response) => {\r\n        return {\r\n            id: response.data.results[0].id,\r\n            name: response.data.results[0].name,\r\n            description: response.data.results[0].description,\r\n            modified: response.data.results[0].modified,\r\n            thumbnail: response.data.results[0].thumbnail.path + '.' + response.data.results[0].thumbnail.extension,\r\n            wiki: response.data.results[0].urls[1].url,\r\n            comics: response.data.results[0].comics\r\n        }\r\n    }\r\n\r\n    const _transformComicsItemObj = (response) => {\r\n        return {\r\n            id: response.data.results[0].id,\r\n            title: response.data.results[0].title,\r\n            description: response.data.results[0].description,\r\n            price: response.data.results[0].prices[0].price,\r\n            pageCount: response.data.results[0].pageCount,\r\n            thumbnail: response.data.results[0].thumbnail.path + '.' + response.data.results[0].thumbnail.extension,\r\n            language: response.data.results[0].textObjects[0].language\r\n        }\r\n    }\r\n\r\n    return { getAllCharcters, getCharacter, getAllComics, getComicsItem, getCharacterByName,\r\n         clearError, process, setProcess };\r\n}\r\n\r\nexport default useMarvelAPI;","import '../Comics/Comics.scss';\r\nimport avengersLogo from '../../resourses/logo/avengers_logo.png';\r\nimport avengers from '../../resourses/img/avengers.png';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport useMarvelAPI from '../../DAL/MarvelAPI/MarvelAPI';\r\nimport componentContent from '../../utils/utils';\r\nimport Loading from '../Common/Loading/Loading';\r\nimport Error from '../Common/Error/Error';\r\nimport { NavLink } from 'react-router-dom';\r\nimport AnimatePage from '../Common/AnimatePage/AnimatePage';\r\n\r\nconst Comics = () => {\r\n    const [comicsItems, setComicsItems] = useState([]);\r\n    const [offset, setOffset] = useState(10008);\r\n    const [newPortion, setNewPortion] = useState(false);\r\n    const { getAllComics, process, setProcess } = useMarvelAPI();\r\n    const comicsRef = useRef([]);\r\n\r\n    useEffect(() => {\r\n        setProcess(\"waiting\");\r\n\r\n        getAllComics()\r\n            .then(res => {\r\n                setComicsItems(comicsItems => [...comicsItems, ...res.data.results]);\r\n            })\r\n            .then(() => setProcess(\"loaded\"));\r\n    }, []);\r\n\r\n    const onLoadMoreClick = () => {\r\n        setNewPortion(true);\r\n        setOffset(offset + 8);\r\n        getAllComics(offset)\r\n            .then(res => {\r\n                setComicsItems(comicsItems => [...comicsItems, ...res.data.results])\r\n                setNewPortion(false);\r\n            });\r\n    }\r\n\r\n    const onEnterItem = (i) => {\r\n        comicsRef.current.forEach(el => el.classList.remove('comics__item__active'));\r\n        comicsRef.current[i].classList.add('comics__item__active');\r\n        comicsRef.current[i].focus();\r\n    }\r\n\r\n    const onLeaveItem = (i) => {\r\n        comicsRef.current.forEach(el => el.classList.remove('comics__item__active'));\r\n        comicsRef.current[i].classList.add('comics__item__active');\r\n        comicsRef.current[i].blur();\r\n    }\r\n\r\n    const comicsList = comicsItems.map((item, i) => {\r\n        const path = `/comics/${item.id}`;\r\n\r\n        return <NavLink to={path} ref={(element) => comicsRef.current.push(element)} onMouseEnter={() => onEnterItem(i)}\r\n            onMouseLeave={() => onLeaveItem(i)} className='comics__item' key={i}>\r\n            <img className='comics__item_img' src={item.thumbnail.path + '.' + item.thumbnail.extension} alt={item.title} />\r\n            <div className='comics__item_title'>\r\n                {item.title}\r\n            </div>\r\n            <div className='comics__item_price'>\r\n                {item.prices[0].price}$\r\n            </div>\r\n        </NavLink>\r\n    })\r\n\r\n\r\n    return <AnimatePage>\r\n        <div className='comics'>\r\n            <div className='container'>\r\n                <ComicsHeader />\r\n                {componentContent(process, <ViewComics comicsList={comicsList}/>)}\r\n                <button style={{ display: `${comicsItems.length < 8 ? 'none' : 'block'}` }} disabled={newPortion} onClick={onLoadMoreClick}>LOAD MORE</button>\r\n            </div>\r\n        </div>\r\n    </AnimatePage>\r\n}\r\n\r\nconst ViewComics = ({comicsList}) => {\r\n    return <div className='comics__items'>\r\n    {comicsList} \r\n</div>\r\n}\r\n\r\nexport const ComicsHeader = () => {\r\n    return <div className='comics__header'>\r\n        <img className='comics__header_avengers' src={avengers} alt='avengers' />\r\n        <div className='comics__header_title'>\r\n            New comics every week!\r\n            <br></br>\r\n            Stay tuned!\r\n        </div>\r\n        <img className='comics__header_avengers-logo' src={avengersLogo} alt='avengers logo' />\r\n    </div>\r\n}\r\n\r\nexport default Comics;","import '../ComicsItem/ComicsItem.scss';\r\nimport { useEffect, useState } from \"react\";\r\nimport useMarvelAPI from \"../../../DAL/MarvelAPI/MarvelAPI\";\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport parse from 'html-react-parser';\r\nimport { ComicsHeader } from '../Comics';\r\nimport AnimatePage from '../../Common/AnimatePage/AnimatePage';\r\n\r\nconst ComicsItem = () => {\r\n    const params = useParams();\r\n    const { getComicsItem } = useMarvelAPI();\r\n    const [item, setItem] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (params.id) {\r\n            getComicsItem(params.id)\r\n                .then(res => {\r\n                    setItem(res);\r\n                })\r\n        }\r\n    }, []);\r\n\r\n    return <AnimatePage>\r\n        <div className='comicsItem'>\r\n            <div className='container'>\r\n                <ComicsHeader />\r\n\r\n                <div className='comicsItem__content'>\r\n                    <img className='comicsItem__content_img' src={item.thumbnail} alt={item.title} />\r\n\r\n                    <div className='comicsItem__content_info'>\r\n                        <h2 className='comicsItem__content_info_name'>{item.title}</h2>\r\n                        {item.description ?\r\n                            parse(`<div className='comicsItem__content_info_descr'>${item.description}</div>`)\r\n                            : 'No info for this comic'\r\n                        }\r\n                        {item.pageCount ?\r\n                            <div className='comicsItem__content_info_pageCount'>{item.pageCount} pages</div>\r\n                            : null\r\n                        }\r\n                        {item.language ?\r\n                            <div className='comicsItem__content_info_language'>Language: {item.language}</div>\r\n                            : null\r\n                        }\r\n                        {item.price ?\r\n                            <div className='comicsItem__content_info_price'>{item.price}$</div>\r\n                            : null\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <NavLink to='/comics'>Back to all</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </AnimatePage>\r\n}\r\n\r\nexport default ComicsItem;","import error from '../Error/error.gif';\r\nimport '../Error/Error.scss';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <>\r\n            <img className='error__img' src={error} alt='error' />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Error;","import Loading from \"../components/Common/Loading/Loading\"\r\nimport Error from \"../components/Common/Error/Error\";\r\n\r\nconst componentContent = (processName, component) => {\r\n  switch (processName) {\r\n    case \"waiting\":\r\n      return <Loading />;\r\n      break;\r\n    case \"loaded\":\r\n      return (\r\n        component\r\n      );\r\n      break;\r\n    case \"error\":\r\n      return <Error />;\r\n      break;\r\n    default:\r\n      return <Error />;\r\n  }\r\n};\r\n\r\nexport default componentContent;\r\n"],"names":["useState","process","setProcess","request","useCallback","url","method","headers","body","fetch","response","ok","Error","status","json","console","log","message","clearError","useHtttp","_baseURL","_apiKey","getAllCharcters","offset","res","getCharacter","id","_transformData","getAllComics","getComicsItem","_transformComicsItemObj","getCharacterByName","name","data","results","description","modified","thumbnail","path","extension","wiki","urls","comics","title","price","prices","pageCount","language","textObjects","ViewComics","comicsList","className","ComicsHeader","src","avengers","alt","avengersLogo","comicsItems","setComicsItems","setOffset","newPortion","setNewPortion","useMarvelAPI","comicsRef","useRef","useEffect","then","map","item","i","to","ref","element","current","push","onMouseEnter","forEach","el","classList","remove","add","focus","onEnterItem","onMouseLeave","blur","onLeaveItem","AnimatePage","componentContent","style","display","length","disabled","onClick","params","useParams","setItem","Comics","parse","error","processName","component"],"sourceRoot":""}